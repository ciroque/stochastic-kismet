# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn test

      - type: setup-docker-engine
        version: 17.06.0-ce

      - run:
          name: Docker Build
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            if [ "${CIRCLE_BRANCH}" == "alpha" ]; then
              docker build --build-arg mix_env=alpha -t ciroque/exertrax:$CIRCLE_BRANCH .
            elif [ "${CIRCLE_BRANCH}" == "beta" ]; then
              docker build --build-arg mix_env=beta -t ciroque/exertrax:$CIRCLE_BRANCH .
            else
              docker build --build-arg mix_env=prod -t ciroque/exertrax:$CIRCLE_BRANCH .
            fi

      - run:
          name: Publish container tagged with branch
          command: |
            docker push ciroque/exertrax:$CIRCLE_BRANCH
            docker tag ciroque/exertrax:$CIRCLE_BRANCH ciroque/exertrax:release

      - run:
          name: Publish latest if master
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag ciroque/exertrax:release ciroque/exertrax:latest
              docker push ciroque/exertrax:latest
            fi

